package study.week05.PGS_LV2_구명보트;

import java.util.*;

/* ================================================================
 *
 * Author   : 이상명
 * Date     : 2025년 05월 11일
 *
 * ================================================================
 * 📌 문제 분석 요약
 *  - 최대 2인승인 구명보트가 있고, 무게 제한도 있다.
 *  - 최대한 적은 수의 구명보트를 사용해서 모든 사람들을 태워야 할 때 필요한 구명보트의 수
 *
 *  # 입력
 *  - people: 구조할 사람들의 무게가 담긴 int 배열
 *  - limit: 구명보트의 무게 제한
 *
 *  # 출력
 *  - 필요한 구명보트의 수 리턴
 *
 *
 * 💻 알고리즘 설계
 *  - 남아있는 사람 중에서 가장 무거운 사람을 구명보트에 태운다. 
 *  - 그리고 남은 사람 중 가장 가벼운 사람이 함께 탈 수 있다면 그 사람도 보트에 태운다. 
 *  - 이런 식으로 사람을 태우면서 구명 보트의 수를 센다.
 *  - 오름차순 정렬 했을 때 가벼운 사람은 첫번째, 무거운 사람은 마지막 번호 (인덱스) 이므로 투 포인터 알고리즘을 활용한다.
 *
 * ================================================================
 */

class Solution {
    public int solution(int[] people, int limit) {

        Arrays.sort(people);

        // 투 포인터 알고리즘
        int light = 0;
        int heavy = people.length - 1;

        int cnt = 0;

        while(light < heavy) {
            // 무거운 사람과 함께 탈 수 있다면 가벼운 사람을 함께 태운다.
            if (people[heavy] + people[light] <= limit) {
                light++;    // 그 다음으로 가벼운 사람.
            }

            heavy--;    // 그 다음으로 무거운 사람.
            cnt++;      // 필요한 구명보트 수 + 1
        }

        if (light == heavy)     // 마지막에 혼자 남았다면 구명보트 + 1
            cnt++;

        return cnt;
    }
}
